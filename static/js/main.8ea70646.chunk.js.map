{"version":3,"sources":["js/DiteChart.js","image/logo.png","js/Header.js","image/home.jpg","js/Home.js","App.js","reportWebVitals.js","index.js"],"names":["DiteChart","props","className","calories","totalFatValue","totalFat","saturatedFatValue","saturatedFat","transFatValue","transFat","cholesterolValue","cholesterol","sodiumValue","sodium","totalCarbohydrateValue","totalCarbohydrate","dietaryFiberValue","dietaryFiber","totalSugerValue","totalSuger","includeSugerValue","includeSuger","ProtineValue","Protine","vitaminDValue","vitaminD","calciumValue","calcium","ironValue","iron","potassiumValue","potassium","Header","src","Logo","alt","Home","newRespee","setState","display","getDate","d_calories","d_totalFat","d_saturatedFat","d_transFat","d_cholesterol","d_sodium","d_totalCarbohydrate","d_dietaryFiber","d_totalSuger","d_includeSuger","d_Protine","d_vitaminD","d_calcium","d_iron","d_potassium","d_totalFatValue","d_saturatedFatValue","d_transFatValue","d_cholesterolValue","d_sodiumValue","d_totalCarbohydrateValue","d_dietaryFiberValue","d_totalSugerValue","d_includeSugerValue","d_ProtineValue","d_vitaminDValue","d_calciumValue","d_ironValue","d_potassiumValue","fetchData","input","state","fetch","then","res","json","totalDaily","FAT","quantity","toFixed","unit","FASAT","CHOLE","NA","CHOCDF","FIBTG","PROCNT","VITD","CA","FE","K","totalNutrients","SUGAR","HomeImg","value","this","onChange","e","target","name","cols","rows","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ea70646.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../css/DiteChart.css'\r\n const DiteChart = (props) => {\r\n    return (\r\n\r\n        <section className=\"main\">\r\n            <h1 className='dite__headingTitle'>Nutrition Facts</h1>\r\n            <hr className='dite__hr1' />\r\n            <p className='dite__amountPerSaving'>Amount Per Serving</p>\r\n            <div className=\"dflex  abc\">\r\n                <h1 className='diet__headingCalory '>Calories</h1>\r\n                <p className='value'>{props.calories}</p>\r\n            </div>\r\n            <hr className='dite__hr2' />\r\n            <p className='dite__dailyValue'>% Daily Value*</p>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading1 dflex1'>Total Fat\r\n                <p className=\"value\">{props.totalFatValue}</p></h5>\r\n                <p className='value1'>{props.totalFat}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1'>Saturated Fat\r\n                <p className=\"value\">{props.saturatedFatValue}</p></h5>\r\n                <p className='value1'>{props.saturatedFat}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1'>Trans Fat -\r\n                <p className=\"value\">{props.transFatValue}</p></h5>\r\n                <p className='value1'>{props.transFat}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading1 dflex1'>Cholesterol\r\n                <p className=\"value\">{props.cholesterolValue}</p></h5>\r\n                <p className='value1'>{props.cholesterol}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading1 dflex1'>Sodium\r\n                <p className=\"value\">{props.sodiumValue}</p></h5>\r\n                <p className='value1'>{props.sodium}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading1 dflex1'>Total Carbohydrate \r\n                <p className=\"value\">{props.totalCarbohydrateValue}</p></h5>\r\n                <p className='value1'>{props.totalCarbohydrate}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1'>Dietary Fiber\r\n                <p className=\"value\">{props.dietaryFiberValue}</p></h5>\r\n                <p className='value1'>{props.dietaryFiber}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1' >Total Sugars\r\n                <p className=\"value\">{props.totalSugerValue}</p></h5>\r\n                <p className='value1'>{props.totalSuger}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1'>Includes - \r\n                <p className=\"value\">{props.includeSugerValue}</p></h5>\r\n                <p className='value1'>{props.includeSuger}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading1 dflex1'>Protein\r\n                <p className=\"value\">{props.ProtineValue}</p></h5>\r\n                <p className='value1'>{props.Protine}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1'>Vitamin D\r\n                <p className=\"value\">{props.vitaminDValue}</p></h5>\r\n                <p className='value1'>{props.vitaminD}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1'>Calcium\r\n                <p className=\"value\">{props.calciumValue}</p></h5>\r\n                <p className='value1'>{props.calcium}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1'>Iron \r\n                <p className=\"value\">{props.ironValue}</p></h5>\r\n                <p className='value1'>{props.iron}</p>\r\n            </div>\r\n            <div className='dflex'>\r\n                <h5 className='dite__heading dflex1'>Potassium\r\n                <p className=\"value\">{props.potassiumValue}</p></h5>\r\n                <p className='value1'>{props.potassium}</p>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <p className='small'>*Percent Daily Values are based on a 2000 calorie diet</p>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport default DiteChart","export default __webpack_public_path__ + \"static/media/logo.e48990d4.png\";","import React from 'react'\r\nimport '../css/Header.css'\r\nimport Logo from '../image/logo.png'\r\nfunction Header() {\r\n    return (\r\n        <nav className='header__container'>\r\n            <img className='header__logo' src={Logo} alt=\"\"/>\r\n            <h3 className=\"header__centerText\">Analysis Your Daily Food</h3>\r\n            <div>\r\n            <button>Signup</button>             \r\n            <button>Login</button>            \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n \r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/home.90db9c34.jpg\";","import React, { Component } from 'react'\r\nimport HomeImg from '../image/home.jpg'\r\nimport DiteChart from './DiteChart'\r\nimport '../css/Home.css'\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            display: false,\r\n            getDate: `1 cup rice,\\n10 oz chickpeas`,\r\n            d_calories: '-',\r\n            d_totalFat: '-',\r\n            d_saturatedFat: '-',\r\n            d_transFat: '-',\r\n            d_cholesterol: '-',\r\n            d_sodium: '-',\r\n            d_totalCarbohydrate: '-',\r\n            d_dietaryFiber: '-',\r\n            d_totalSuger: '-',\r\n            d_includeSuger: '-',\r\n            d_Protine: '-',\r\n            d_vitaminD: '-',\r\n            d_calcium: '-',\r\n            d_iron: '-',\r\n            d_potassium: '-',\r\n\r\n            d_totalFatValue: '-',\r\n            d_saturatedFatValue: '-',\r\n            d_transFatValue: '-',\r\n            d_cholesterolValue: '-',\r\n            d_sodiumValue: '-',\r\n            d_totalCarbohydrateValue: '-',\r\n            d_dietaryFiberValue: '-',\r\n            d_totalSugerValue: '-',\r\n            d_includeSugerValue: '-',\r\n            d_ProtineValue: '-',\r\n            d_vitaminDValue: '-',\r\n            d_calciumValue: '-',\r\n            d_ironValue: '-',\r\n            d_potassiumValue: '-'\r\n        }\r\n    }\r\n\r\n    newRespee = () => {\r\n        this.setState({\r\n            display: false,\r\n            getDate: '',\r\n            d_calories: '-',\r\n            d_totalFat: '-',\r\n            d_saturatedFat: '-',\r\n            d_transFat: '-',\r\n            d_cholesterol: '-',\r\n            d_sodium: '-',\r\n            d_totalCarbohydrate: '-',\r\n            d_dietaryFiber: '-',\r\n            d_totalSuger: '-',\r\n            d_includeSuger: '-',\r\n            d_Protine: '-',\r\n            d_vitaminD: '-',\r\n            d_calcium: '-',\r\n            d_iron: '-',\r\n            d_potassium: '-',\r\n\r\n            d_totalFatValue: '-',\r\n            d_saturatedFatValue: '-',\r\n            d_transFatValue: '-',\r\n            d_cholesterolValue: '-',\r\n            d_sodiumValue: '-',\r\n            d_totalCarbohydrateValue: '-',\r\n            d_dietaryFiberValue: '-',\r\n            d_totalSugerValue: '-',\r\n            d_includeSugerValue: '-',\r\n            d_ProtineValue: '-',\r\n            d_vitaminDValue: '-',\r\n            d_calciumValue: '-',\r\n            d_ironValue: '-',\r\n            d_potassiumValue: '-'\r\n        })\r\n    }\r\n\r\n\r\n    fetchData = () => {\r\n        let input = this.state.getDate;\r\n        //console.log(this.state.d_calories)\r\n\r\n        fetch(`https://api.edamam.com/api/nutrition-data?app_id=8459c0fa&app_key=06448dd5d7faf1eb8867497974bd7d17&ingr=${input}`)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                //                console.log(json)\r\n                this.setState({\r\n                    display:true,\r\n                    d_calories: json.calories,\r\n                    d_totalFat: json.totalDaily.FAT.quantity.toFixed(2) + \" \" + json.totalDaily.FAT.unit,\r\n                    d_saturatedFat: json.totalDaily.FASAT.quantity.toFixed(2) + \" \" + json.totalDaily.FASAT.unit,\r\n                    d_transFat: \"-\",\r\n                    d_cholesterol: json.totalDaily.CHOLE.quantity.toFixed(2) + \" \" + json.totalDaily.CHOLE.unit,\r\n                    d_sodium: json.totalDaily.NA.quantity.toFixed(2) + \" \" + json.totalDaily.NA.unit,\r\n                    d_totalCarbohydrate: json.totalDaily.CHOCDF.quantity.toFixed(2) + \" \" + json.totalDaily.CHOCDF.unit,\r\n                    d_dietaryFiber: json.totalDaily.FIBTG.quantity.toFixed(2) + \" \" + json.totalDaily.FIBTG.unit,\r\n                    d_totalSuger: '',\r\n                    d_includeSuger: '',\r\n                    d_Protine: json.totalDaily.PROCNT.quantity.toFixed(2) + \" \" + json.totalDaily.PROCNT.unit,\r\n                    d_vitaminD: json.totalDaily.VITD.quantity.toFixed(2) + \" \" + json.totalDaily.VITD.unit,\r\n                    d_calcium: json.totalDaily.CA.quantity.toFixed(2) + \" \" + json.totalDaily.CA.unit,\r\n                    d_iron: json.totalDaily.FE.quantity.toFixed(2) + \" \" + json.totalDaily.FE.unit,\r\n                    d_potassium: json.totalDaily.K.quantity.toFixed(2) + \" \" + json.totalDaily.K.unit,\r\n\r\n                    d_totalFatValue: json.totalNutrients.FAT.quantity.toFixed(2) + \" \" + json.totalNutrients.FAT.unit,\r\n                    d_saturatedFatValue: json.totalNutrients.FASAT.quantity.toFixed(2) + \" \" + json.totalNutrients.FASAT.unit,\r\n                    d_transFatValue: '',\r\n                    d_cholesterolValue: json.totalNutrients.CHOLE.quantity.toFixed(2) + \" \" + json.totalNutrients.CHOLE.unit,\r\n                    d_sodiumValue: json.totalNutrients.NA.quantity.toFixed(2) + \" \" + json.totalNutrients.NA.unit,\r\n                    d_totalCarbohydrateValue: json.totalNutrients.CHOCDF.quantity.toFixed(2) + \" \" + json.totalNutrients.CHOCDF.unit,\r\n                    d_dietaryFiberValue: json.totalNutrients.FIBTG.quantity.toFixed(2) + \" \" + json.totalNutrients.FIBTG.unit,\r\n                    d_totalSugerValue: json.totalNutrients.SUGAR.quantity.toFixed(2) + \" \" + json.totalNutrients.SUGAR.unit,\r\n                    d_includeSugerValue: '-Added Sugars',\r\n                    d_ProtineValue: json.totalNutrients.PROCNT.quantity.toFixed(2) + \" \" + json.totalNutrients.PROCNT.unit,\r\n                    d_vitaminDValue: json.totalNutrients.VITD.quantity.toFixed(2) + \" \" + json.totalNutrients.VITD.unit,\r\n                    d_calciumValue: json.totalNutrients.CA.quantity.toFixed(2) + \" \" + json.totalNutrients.CA.unit,\r\n                    d_ironValue: json.totalNutrients.FE.quantity.toFixed(2) + \" \" + json.totalNutrients.FE.unit,\r\n                    d_potassiumValue: json.totalNutrients.K.quantity.toFixed(2) + \" \" + json.totalNutrients.K.unit,\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home__container\">\r\n                <img className='home__image' src={HomeImg} alt=\"asajh\" />\r\n                <div className=\"home__layoutItemContainer\">\r\n                    <h2 className='home__layoutItemContainerHeading'>Nutrition Analysis</h2>\r\n                    <p className='home__layoutItemContainerPara'>Enter an ingredient list list for what you are cooking, like <span className='home__layoutItemContainerParaSpan'> \"1 cup rice, 10 oz chickpeas\"</span>, etc.</p>\r\n                    <p className='home__layoutItemContainerPara'>Enter each ingredient on a new line. </p>\r\n                    <div className=\"container\">\r\n                        <section className='section__1'>\r\n                            <textarea value={this.state.getDate} onChange={(e) => { this.setState({ getDate: e.target.value }) }} className='home__layoutItemContainerTextfield' name=\"\" cols=\"50\" rows=\"10\" ></textarea>\r\n                            <div className='home__layoutItemContainerDiv'>\r\n                                <button onClick={this.fetchData} className='home__layoutItemContainerBtn'>Analyze</button>\r\n                                <button onClick={this.newRespee} className='home__layoutItemContainerBtn'>New recipe</button>\r\n                            </div>\r\n                        </section>\r\n                        {this.state.display ?\r\n                            <DiteChart\r\n                                calories={this.state.d_calories}\r\n                                totalFat={this.state.d_totalFat}\r\n                                saturatedFat={this.state.d_saturatedFat}\r\n                                transFat={this.state.d_transFat}\r\n                                cholesterol={this.state.d_cholesterol}\r\n                                sodium={this.state.d_sodium}\r\n                                totalCarbohydrate={this.state.d_totalCarbohydrate}\r\n                                dietaryFiber={this.state.d_dietaryFiber}\r\n                                totalSuger={this.state.d_totalSuger}\r\n                                includeSuger={this.state.d_includeSuger}\r\n                                Protine={this.state.d_Protine}\r\n                                vitaminD={this.state.d_vitaminD}\r\n                                calcium={this.state.d_calcium}\r\n                                iron={this.state.d_iron}\r\n                                potassium={this.state.d_potassium}\r\n\r\n                                totalFatValue={this.state.d_totalSugerValue}\r\n                                saturatedFatValue={this.state.d_saturatedFatValue}\r\n                                transFatValue={this.state.d_transFatValue}\r\n                                cholesterolValue={this.state.d_cholesterolValue}\r\n                                sodiumValue={this.state.d_sodiumValue}\r\n                                totalCarbohydrateValue={this.state.d_totalCarbohydrateValue}\r\n                                dietaryFiberValue={this.state.d_dietaryFiberValue}\r\n                                totalSugerValue={this.state.d_totalSugerValue}\r\n                                includeSugerValue={this.state.d_includeSugerValue}\r\n                                ProtineValue={this.state.d_potassiumValue}\r\n                                vitaminDValue={this.state.d_vitaminDValue}\r\n                                calciumValue={this.state.d_calciumValue}\r\n                                ironValue={this.state.d_ironValue}\r\n                                potassiumValue={this.state.d_potassiumValue}\r\n                            /> : \"\"\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <footer className='footer'>\r\n                    Created by HRishabh Gupta\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport { DiteChart } from './js/DiteChart';\nimport Header from \"./js/Header\";\nimport Home from './js/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}